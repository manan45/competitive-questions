
#Given an array of integers, return indices of the two numbers such that they add up to a specific target.

#You may assume that each input would have exactly one solution, and you may not use the same element twice.

#Example:

#Given nums = [2, 7, 11, 15], target = 9,

#Because nums[0] + nums[1] = 2 + 7 = 9,
#return [0, 1].


class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        
        
        sorted_list=sorted(nums)
        length=len(sorted_list)
        left_index=0
        right_index=length-1
        while (left_index<right_index):
            value=sorted_list[left_index]+sorted_list[right_index]
            if value>target:
                right_index=right_index-1
            
    
            elif value<target:
                left_index=left_index+1
            elif value==target:
                left=sorted_list[left_index]
                right=sorted_list[right_index]
                a=nums.index(left)
                nums[a]='a'
                b=nums.index(right)
                nums[b]='b'
                return[a,b]
